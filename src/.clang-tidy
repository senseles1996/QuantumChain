To transform the Bitcoin Core source code into a new blockchain called QuantumChain, we will need to make several modifications to the codebase. Here's a high-level overview of the steps we would take:

1. Replace all references to Bitcoin with QuantumChain: This involves a simple find-and-replace operation throughout the entire codebase. 

2. Replace the ECDSA cryptographic algorithm with Crystals-Dilithium quantum-resistant encryption: This would involve replacing the cryptographic functions in the code with their Crystals-Dilithium equivalents. This might require adding new libraries or modules to the project.

3. Add a premine feature to create and transfer 1,000,000 tokens to the owner ('senseles1996') upon initial blockchain setup: This would involve modifying the genesis block creation code to include a transaction that transfers the premine amount to the owner's address.

4. Maintain a fixed supply of 21 million tokens, similar to Bitcoin, using quantum-resistant encryption: This would involve setting the maximum supply variable to 21 million and ensuring that the mining and transaction validation code respects this limit.

5. Introduce advanced dynamic consensus mechanisms to adapt to network conditions, improving efficiency and scalability: This would involve implementing new consensus algorithms and modifying the block validation and mining code to use these algorithms.

6. Integrate interoperability tools to enable communication with other blockchain networks: This would involve adding new modules or libraries that provide interoperability features, and modifying the network communication code to use these features.

7. Focus on creating a sustainable and eco-friendly proof-of-stake or hybrid consensus mechanism: This would involve replacing the proof-of-work consensus algorithm with a proof-of-stake or hybrid algorithm.

8. Incorporate modular smart contract templates for decentralized application development, excluding AI integration: This would involve adding new modules or libraries that provide smart contract functionality, and modifying the transaction validation and execution code to support smart contracts.

9. Implement a quantum-resistant wallet system with user-friendly key recovery features: This would involve modifying the wallet code to use quantum-resistant encryption and adding new features for key recovery.

10. Add comprehensive logging and comments explaining every modification related to quantum security, consensus, and smart contract features: This would involve adding logging statements and comments throughout the codebase.

11. Ensure the final code is fully functional, and all necessary changes are implemented for a new blockchain launch: This would involve thorough testing and debugging of the modified codebase.

Please note that this is a high-level overview and the actual implementation would be much more complex and time-consuming. It would require a deep understanding of the Bitcoin Core codebase, the new technologies to be implemented, and blockchain technology in general.